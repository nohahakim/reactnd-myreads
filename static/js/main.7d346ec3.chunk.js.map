{"version":3,"sources":["BooksAPI.js","components/BookShelfChanger.js","components/Book.js","components/Shelf.js","components/BookCase.js","components/SearchPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","BookShelfChanger","props","book","shelfChanger","_jsx","className","children","_jsxs","value","shelf","onChange","e","target","disabled","Book","style","width","height","backgroundImage","imageLinks","concat","thumbnail","title","authors","join","Shelf","books","name","map","id","BookCase","filter","b","Link","to","SearchPage","Component","constructor","arguments","state","query","updateQuery","this","setState","updateSearch","render","onSubmit","event","preventDefault","DebounceInput","type","placeholder","debounceTimeout","searchResults","BooksApp","React","fetch","method","_objectSpread","body","JSON","stringify","then","res","json","data","BooksAPI","trim","error","searchedBook","forEach","update","resp","async","Routes","Route","exact","path","element","ReactDOM","BrowserRouter","basename","App","document","getElementById"],"mappings":"6MACA,MAAMA,EAAM,wCAIZ,IAAIC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,MAAMC,EAAU,CACd,OAAU,mBACV,cAAiBN,G,+BCgBJO,MAvBf,SAA0BC,GAEtB,MAAM,KAAEC,EAAI,aAAEC,GAAiBF,EAE/B,OACIG,cAAA,OAAKC,UAAU,qBAAoBC,SAC/BC,eAAA,UAAQC,MAAON,EAAKO,OAAS,OACzBC,SAAWC,IAAQR,EAAaD,EAAMS,EAAEC,OAAOJ,QAASF,SAAA,CACxDF,cAAA,UAAQI,MAAM,OAAOK,UAAQ,EAAAP,SAAC,eAC9BF,cAAA,UAAQI,MAAM,mBAAkBF,SAAC,sBACjCF,cAAA,UAAQI,MAAM,aAAYF,SAAC,iBAC3BF,cAAA,UAAQI,MAAM,OAAMF,SAAC,SACrBF,cAAA,UAAQI,MAAM,OAAMF,SAAC,eCWtBQ,MAtBf,SAAcb,GAEV,MAAM,KAAEC,EAAI,aAAEC,GAAiBF,EAC/B,OACIM,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBC,eAAA,OAAKF,UAAU,WAAUC,SAAA,CACrBF,cAAA,OAAKC,UAAU,aAAaU,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAkBhB,EAAKiB,YAAU,OAAAC,OAAWlB,EAAKiB,WAAWE,UAAS,QACnIjB,cAACJ,EAAgB,CAACE,KAAMA,EACpBC,aAAcA,OAGtBC,cAAA,OAAKC,UAAU,aAAYC,SAAEJ,EAAKoB,QAClClB,cAAA,OAAKC,UAAU,eAAcC,SAAEJ,EAAKqB,SAAWrB,EAAKqB,QAAQC,KAAK,YCW9DC,MAvBf,SAAexB,GACb,MAAM,MAAEyB,EAAK,aAAEvB,EAAY,KAAEwB,GAAS1B,EACtC,OACEM,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACxBF,cAAA,MAAIC,UAAU,kBAAiBC,SAAEqB,IACjCvB,cAAA,OAAKC,UAAU,kBAAiBC,SAC9BF,cAAA,MAAIC,UAAU,aAAYC,SAEtBoB,EAAME,KAAK1B,GAASE,cAACU,EAAI,CAACX,aAAcA,EAAcD,KAAMA,GAAWA,EAAK2B,cCuBzEC,MA9Bf,SAAkB7B,GAEhB,MAAM,MAAEyB,EAAK,aAAEvB,GAAiBF,EAEhC,OACEM,eAAA,OAAKF,UAAU,aAAYC,SAAA,CACzBF,cAAA,OAAKC,UAAU,mBAAkBC,SAC/BF,cAAA,MAAAE,SAAI,cAENF,cAAA,OAAKC,UAAU,qBAAoBC,SACjCC,eAAA,OAAAD,SAAA,CACEF,cAACqB,EAAK,CAAwBtB,aAAcA,EAAcwB,KAAK,oBAAoBD,MAAOA,EAAMK,QAAOC,GAAiB,qBAAZA,EAAEvB,SAAnG,oBACXL,cAACqB,EAAK,CAAqBtB,aAAcA,EAAcwB,KAAK,eAAeD,MAAOA,EAAMK,QAAOC,GAAiB,eAAZA,EAAEvB,SAA3F,iBACXL,cAACqB,EAAK,CAAiBtB,aAAcA,EAAcwB,KAAK,OAAOD,MAAOA,EAAMK,QAAOC,GAAiB,SAAZA,EAAEvB,SAA/E,kBAIfL,cAAA,OAAKC,UAAU,cAAaC,SAC1BF,cAAC6B,IAAI,CAACC,GAAG,UAAS5B,SAAE,qB,OCjB5B,MAAM6B,UAAmBC,YAAUC,cAAA,SAAAC,WAAA,KAC/BC,MAAQ,CACJC,MAAO,IACT,KAEFC,YAAeD,IACXE,KAAKC,SAAS,CAAEH,MAAOA,IACvBE,KAAKzC,MAAM2C,aAAaJ,IAE5BK,SACI,OACIzC,cAAA,OAAAE,SACIC,eAAA,OAAKF,UAAU,eAAcC,SAAA,CACzBC,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC7BF,cAAC6B,IAAI,CAACC,GAAG,IAAI7B,UAAU,eAAcC,SAAE,UACvCF,cAAA,OAAKC,UAAU,6BAA6ByC,SAAWC,GAAUA,EAAMC,iBAAiB1C,SAEpFF,cAAC6C,gBAAa,CAACC,KAAK,OAAOC,YAAY,4BACnC3C,MAAOkC,KAAKH,MAAMC,MAClB9B,SAAWqC,GAAUL,KAAKD,YAAYM,EAAMnC,OAAOJ,OACnD4C,gBAAiB,WAK7BhD,cAAA,OAAKC,UAAU,uBAAsBC,SACjCF,cAAA,MAAIC,UAAU,aAAYC,SAElBoC,KAAKzC,MAAMoD,cAAczB,KAAK1B,GAASE,cAACU,EAAI,CAACX,aAAcuC,KAAKzC,MAAME,aAAcD,KAAMA,GAAWA,EAAK2B,gBAe3HM,QC3Cf,MAAMmB,UAAiBC,IAAMnB,UAAUC,cAAA,SAAAC,WAAA,KACrCC,MAAQ,CACNb,MAAO,GACP2B,cAAe,IAChB,KAODT,aAAgBJ,IACVA,ENeeA,IACrBgB,MAAM,GAADpC,OAAI5B,EAAG,WAAW,CACrBiE,OAAQ,OACR1D,QAAO2D,wBAAA,GACF3D,GAAO,IACV,eAAgB,qBAElB4D,KAAMC,KAAKC,UAAU,CAAErB,YACtBsB,MAAKC,GAAOA,EAAIC,SAChBF,MAAKG,GAAQA,EAAKvC,QMvBjBwC,CAAgB1B,EAAM2B,QAAQL,MAAKC,IACjC,GAAIA,EAAIK,MACN,OAAO1B,KAAKC,SAAS,CAAEU,cAAe,KAGtCU,EAAInC,KAAIyC,IACN3B,KAAKH,MAAMb,MAAM4C,SAAQpE,IACnBmE,EAAaxC,KAAO3B,EAAK2B,KAC3BwC,EAAa5D,MAAQP,EAAKO,UAGvBiC,KAAKC,SAAS,CAAEU,cAAeU,UAM5CrB,KAAKC,SAAS,CAAEU,cAAe,MAGlC,KAEDlD,aAAe,CAACD,EAAMO,KNlBF8D,EAACrE,EAAMO,IAC3B+C,MAAM,GAADpC,OAAI5B,EAAG,WAAA4B,OAAUlB,EAAK2B,IAAM,CAC/B4B,OAAQ,MACR1D,QAAO2D,wBAAA,GACF3D,GAAO,IACV,eAAgB,qBAElB4D,KAAMC,KAAKC,UAAU,CAAEpD,YACtBqD,MAAKC,GAAOA,EAAIC,SMWjBE,CAAgBhE,EAAMO,GACnBqD,MAAKU,IACJtE,EAAKO,MAAQA,EACbiC,KAAKC,UAASJ,IAAK,CACjBb,MAAOa,EAAMb,MAAMK,QAAOC,GAAKA,EAAEH,KAAO3B,EAAK2B,KAAIT,OAAO,CAAClB,YAlCjEuE,0BACE,MAAM/C,QNMR8B,MAAM,GAADpC,OAAI5B,EAAG,UAAU,CAAEO,YACrB+D,MAAKC,GAAOA,EAAIC,SAChBF,MAAKG,GAAQA,EAAKvC,QMPnBgB,KAAKC,SAAS,CAAEjB,UAqClBmB,SACE,OACEzC,cAAA,OAAAE,SACEC,eAACmE,IAAM,CAAApE,SAAA,CACLF,cAACuE,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAAS1E,cAAC0B,EAAQ,CAACJ,MAAOgB,KAAKH,MAAMb,MAAOvB,aAAcuC,KAAKvC,iBAErFC,cAACuE,IAAK,CAACC,OAAK,EAACC,KAAK,SAASC,QAAS1E,cAAC+B,EAAU,CAACkB,cAAeX,KAAKH,MAAMc,cACxET,aAAcF,KAAKE,aACnBzC,aAAcuC,KAAKvC,uBAOhBmD,Q,MC7DfyB,IAASlC,OACPzC,cAAC4E,IAAa,CAACC,SAAS,mBAAkB3E,SACxCF,cAAC8E,EAAG,MAENC,SAASC,eAAe,W","file":"static/js/main.7d346ec3.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction BookShelfChanger(props) {\r\n\r\n    const { book, shelfChanger } = props\r\n\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select value={book.shelf || 'none'}\r\n                onChange={(e) => { shelfChanger(book, e.target.value) }}>\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\nBookShelfChanger.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    shelfChanger: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default BookShelfChanger;","import React from \"react\";\r\nimport BookShelfChanger from \"./BookShelfChanger\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Book(props) {\r\n\r\n    const { book, shelfChanger } = props;\r\n    return (\r\n        <div className=\"book\">\r\n            <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: (book.imageLinks && `url(${book.imageLinks.thumbnail})`) }}></div>\r\n                <BookShelfChanger book={book}\r\n                    shelfChanger={shelfChanger}\r\n                />\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\r\n        </div>\r\n    )\r\n}\r\nBook.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    shelfChanger: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Book;","import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Shelf(props) {\r\n  const { books, shelfChanger, name } = props\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{name}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {\r\n            books.map((book) => <Book shelfChanger={shelfChanger} book={book} key={book.id} />)\r\n          }\r\n        </ol>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\nShelf.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Shelf;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Shelf from \"./Shelf\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction BookCase(props) {\r\n\r\n  const { books, shelfChanger } = props\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <Shelf key='currentReadShelf' shelfChanger={shelfChanger} name=\"Currently Reading\" books={books.filter(b => b.shelf === \"currentlyReading\")} />\r\n          <Shelf key='wantReadShelf' shelfChanger={shelfChanger} name=\"Want To Read\" books={books.filter(b => b.shelf === \"wantToRead\")} />\r\n          <Shelf key='readShelf' shelfChanger={shelfChanger} name=\"Read\" books={books.filter(b => b.shelf === \"read\")} />\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to='/search' >Add a book</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBookCase.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  shelfChanger: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default BookCase;","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport Book from \"./Book\";\r\nimport PropTypes from 'prop-types';\r\nimport {DebounceInput} from 'react-debounce-input';\r\n\r\n\r\nclass SearchPage extends Component {\r\n    state = {\r\n        query: ''\r\n    };\r\n\r\n    updateQuery = (query) => {\r\n        this.setState({ query: query });\r\n        this.props.updateSearch(query)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"search-books\">\r\n                    <div className=\"search-books-bar\">\r\n                        <Link to=\"/\" className=\"close-search\" >Close</Link>\r\n                        <div className=\"search-books-input-wrapper\" onSubmit={(event) => event.preventDefault()} >\r\n\r\n                            <DebounceInput type=\"text\" placeholder=\"Search by title or author\"\r\n                                value={this.state.query}\r\n                                onChange={(event) => this.updateQuery(event.target.value)} \r\n                                debounceTimeout={300}\r\n                                />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search-books-results\">\r\n                        <ol className=\"books-grid\">\r\n                            {\r\n                                this.props.searchResults.map((book) => <Book shelfChanger={this.props.shelfChanger} book={book} key={book.id} />)\r\n                            }\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nSearchPage.propTypes = {\r\n    searchResults: PropTypes.array.isRequired,\r\n    shelfChanger: PropTypes.func.isRequired,\r\n    updateSearch: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default SearchPage;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport BookCase from './components/BookCase'\r\nimport SearchPage from './components/SearchPage'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n    searchResults: []\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const books = await BooksAPI.getAll();\r\n    this.setState({ books });\r\n  }\r\n\r\n  updateSearch = (query) => {\r\n    if (query) {\r\n      BooksAPI.search(query.trim()).then(res => {\r\n        if (res.error) {\r\n          return this.setState({ searchResults: [] });\r\n        }\r\n        else {\r\n          res.map(searchedBook => {\r\n            this.state.books.forEach(book => {\r\n              if (searchedBook.id === book.id) {\r\n                searchedBook.shelf = book.shelf;\r\n              }\r\n            });\r\n            return this.setState({ searchResults: res });\r\n          });\r\n        }\r\n      })\r\n\r\n    } else {\r\n      this.setState({ searchResults: [] })\r\n    }\r\n\r\n  }\r\n\r\n  shelfChanger = (book, shelf) => {\r\n    BooksAPI.update(book, shelf)\r\n      .then(resp => {\r\n        book.shelf = shelf;\r\n        this.setState(state => ({\r\n          books: state.books.filter(b => b.id !== book.id).concat([book])\r\n        }));\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<BookCase books={this.state.books} shelfChanger={this.shelfChanger} />} />\r\n\r\n          <Route exact path=\"search\" element={<SearchPage searchResults={this.state.searchResults}\r\n            updateSearch={this.updateSearch}\r\n            shelfChanger={this.shelfChanger} />} />\r\n        </Routes>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/reactnd-myreads\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}